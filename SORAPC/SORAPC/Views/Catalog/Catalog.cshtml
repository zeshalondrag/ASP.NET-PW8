@model IEnumerable<SORAPC_API.Models.Product>
@{
    ViewData["Title"] = "Каталог товаров";
}

<div class="container my-5 pt-5">
    <h2 class="text-center fw-bold mb-5" style="color: #343a40;">КАТАЛОГ ТОВАРОВ</h2>
    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-4 g-4">
        @foreach (var i in Model)
        {
            <div class="col">
                <div class="card h-100 shadow-sm border-0 product-card" data-category="@i.ProductCategoryId" data-price="@i.Price">
                    <!-- Изображение -->
                    <a asp-action="Details" asp-controller="ProductDetails" asp-route-id="@i.IdProduct">
                        <img src="@Url.Content("~/image/" + i.Img)" alt="@i.Names" class="card-img-top product-image">
                    </a>

                    <!-- Тело карточки -->
                    <div class="card-body d-flex flex-column">
                        <a asp-action="Details" asp-controller="ProductDetails" asp-route-id="@i.IdProduct" class="text-decoration-none">
                            <h5 class="card-title product-name fw-semibold text-dark">@i.Names</h5>
                        </a>

                        <!-- Рейтинг -->
                        <div class="product-rating mb-2">
                            @{
                                var averageRating = await Component.InvokeAsync("AverageRating", new { productId = i.IdProduct });
                            }
                            <div class="d-flex align-items-center gap-2">
                                <span class="d-flex align-items-center text-warning">
                                    @averageRating
                                </span>
                                <span class="text-muted small-reviews">@i.Reviews.Count() отзыв(ов)</span>
                            </div>
                        </div>

                        <!-- Доступность -->
                        <div class="product-availability mb-3 d-flex flex-wrap gap-2">
                            <span class="badge @(i.ProductStatusId == 1 ? "bg-success" : i.ProductStatusId == 2 ? "bg-danger" : "bg-secondary")">
                                @{
                                    string status = i.ProductStatusId == 1 ? "В наличии" :
                                    i.ProductStatusId == 2 ? "Нет в наличии" :
                                    "Неизвестно";
                                    @status
                                }
                            </span>
                            @if (i.ProductStatusId == 1)
                            {
                                <span class="text-muted small">Пункты выдачи доступны</span>
                            }
                        </div>

                        <!-- Цена и кнопка -->
                        <div class="price-section mt-auto d-flex justify-content-between align-items-center">
                            <p class="price fw-bold text-dark mb-0">@i.Price.ToString("N0") ₽</p>
                            @if (i.ProductStatusId == 1)
                            {
                                <form asp-action="AddToCart" asp-controller="Cart" method="post" class="d-inline">
                                    <input type="hidden" name="productId" value="@i.IdProduct" />
                                    <input type="hidden" name="returnUrl" value="@Context.Request.Path@Context.Request.QueryString" />
                                    <button type="submit" class="btn btn-primary btn-sm rounded-pill buy-button">
                                        <i class="fas fa-shopping-cart me-1"></i> Купить
                                    </button>
                                </form>
                            }
                            else
                            {
                                <button class="btn btn-secondary btn-sm rounded-pill buy-button" disabled>
                                    <i class="fas fa-shopping-cart me-1"></i> Купить
                                </button>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<style>
    .product-card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        overflow: hidden;
        border-radius: 10px;
    }

        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.15) !important;
        }

    .product-image {
        height: 150px;
        object-fit: contain;
        transition: transform 0.3s ease;
        padding: 10px;
    }

    .product-card:hover .product-image {
        transform: scale(1.05);
    }

    .product-name {
        font-size: 1rem;
        min-height: 2.5rem;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    .price {
        font-size: 1.1rem;
        color: #343a40;
    }

    .buy-button {
        transition: background-color 0.3s ease;
    }

        .buy-button:hover:not(:disabled) {
            background-color: #0056b3;
        }

    .product-availability .small {
        font-size: 0.85rem;
    }

    .small-reviews {
        font-size: 0.75rem;
    }
</style>